// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String  @unique
  hash     String
  hashedRt String?
  role     Role    @default(USER)
  sites    Site[]

  @@map("users")
}

model Site {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  createdAt DateTime @default(now())
  users     User[]
  polls     Poll[]
}

model Poll {
  id            Int               @id @default(autoincrement())
  siteId        Int
  statusCode    Int
  retryCount    Int               @default(0)
  requestMethod EnumRequestMethod
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  site          Site              @relation(fields: [siteId], references: [id], onDelete: Cascade)
}

model PollingTask {
  id            Int               @id @default(autoincrement())
  requestMethod EnumRequestMethod @default(GET)
  pollingState  PollingState      @default(RUNNING)
  startTime     DateTime          @default(now())
  triggeredBy   PollTrigger
  endTime       DateTime?
}

enum PollTrigger {
  MANUAL
  SCHEDULE
}

enum PollingState {
  IDLE
  RUNNING
}

enum EnumRequestMethod {
  GET
  HEAD
  PING
}

enum Role {
  OWNER
  ADMIN
  USER
}
